{#
/**
 * Tilt Boilermaker -Button Group Template
 * -----
 * Loads the appropriate page partial or the default
 * 
 * @author    TILT, LLC <support@tiltbuilt.com>
 * @copyright Copyright (c) 2019, TILT, LLC
 * @link      https://tiltbuilt.com
 */
#}

{# Load in global macros for use across all Twig templates #}
{% import '_macros/globalMacros' as gMacros %}

{# Create array for classes to pass to macros for set #}
{% set btnSetClassList = [] %}

{# Set block id attribute value #}
{% if entry.customId is defined and entry.customId != '' %}
	{% set blockId = entry.customId|replace({' ': '-'})|trim %}
{% else %}
	{% set blockId = 'button-set-' ~ entry.id %}
{% endif %}

{# Set block type handle as class name for styling #}
{% set blockClass = entry.type.handle|kebab %}

{# Get classes for element animation settings #}
{# animation classes #}
{% set animClass = '' %}
{% if _globals.get('animSetting') and 'section' in entry.owner.type.handle %}
	{% set animClass = _globals.get('animSetting') %}
	{% set btnSetClassList = btnSetClassList|merge([animClass]) %}		
{% endif %}

{# Set color class #}
{% set colorScheme = _globals.get('colorScheme') %}
{% if entry.btnColor|length %}
	{% set colorClass = 'btn-' ~ entry.btnColor %}
{% else %}
	{% set colorClass = colorScheme %}
{% endif %}

{# create object with btn set preset styles to grab from as needed if buttons do not have custom styles different from the set #}
{% set btnSetStyles = {
	'size': entry.btnSize,
	'style': entry.btnStyles,
	'fullWidthPhone': entry.fullWidthPhone,
	'color': colorClass,
}
%}


{# Retrieve styling adjustments #}
{% set adjustments = entry.buttonGroupStyleAdjustments.eagerly().all() %}

<div id="{{blockId}}" class="{{- blockClass -}} {{- gMacros.classesOut(adjustments, 'Display') -}} {{- gMacros.classesOut(adjustments, 'Margins', true) -}} {{- btnSetClassList|join(' ') }} {{ entry.customClasses }}" {{- gMacros.attributesOut(entry.customAttributes) -}}>
	{% set buttons = entry.buttons %}
	{% for button in buttons %}
		{# get styles for button or if not set, use styles from the set #}
		{% set btnClasses = ['btn'] %}
		{% if button.btnStyles|length %}
			{% set btnClasses = btnClasses|merge([button.btnStyles]) %}
		{% else %}
			{% set btnClasses = btnClasses|merge([btnSetStyles.style]) %}
		{% endif %}
		{% if button.btnSize|length %}
			{% set btnClasses = btnClasses|merge([button.btnSize]) %}
		{% else %}
			{% set btnClasses = btnClasses|merge([btnSetStyles.size]) %}
		{% endif %}
		{% if button.btnColor|length %}
			{% set btnClasses = btnClasses|merge([button.btnColor]) %}
		{% else %}
			{% set btnClasses = btnClasses|merge([btnSetStyles.color]) %}
		{% endif %}
		{% if btnSetStyles.fullWidthPhone %}
			{% set btnClasses = btnClasses|merge(['btn-fullwidth-phone']) %}
		{% endif %}
		
		{# if button is a modal button do one thing, if not do the other #}
		{% if button.getLinkType().label == 'Modal' %}
			{# modal #}
			{% set modalUrl = '/resources/entrymodal?entryid=' ~ button.linkValue %}
			<button {% if button.customId|length %}id="{{button.customId}}"{% endif %} type="button" class="{{- btnClasses|join(' ') }} {{ entry.customClasses }}" {% if button.ariaLabel|length %}aria-label="{{button.ariaLabel}}"{% endif %} data-modal-target="{{ modalUrl}}"  {{- gMacros.attributesOut(button.customAttributes) -}}>
				<span>{{ (button.text|length) ? button.text : 'Learn More' }}</span>
			</button>
		{% else %}
			{# everything else #}
			<a {% if button.customId|length %}id="{{button.customId}}"{% endif %} href="{{ button.url }}" {{- button.target|length ? ' target="_blank"' : '' }} class="{{- btnClasses|join(' ') }} {{ entry.customClasses }}" {% if button.ariaLabel|length %}aria-label="{{button.ariaLabel}}"{% endif %}  {{- gMacros.attributesOut(button.customAttributes) -}}>
				<span>{{ (button.text|length) ? button.text : 'Learn More' }}</span>
			</a>
		{% endif %}			
	{% endfor %}				
</div>
	