{#
/**
 * Tilt Boilermaker -Block Quote Template
 * -----
 * Loads the appropriate page partial or the default
 * 
 * @author    TILT, LLC <support@tiltbuilt.com>
 * @copyright Copyright (c) 2019, TILT, LLC
 * @link      https://tiltbuilt.com
 */
#}

{% if entry.enabled %}

	{# Load in global macros for use across all Twig templates #}
	{% import '_macros/globalMacros' as gMacros %}
	
	{# Subhead styling macro #}
	{% macro creditClasses(adjustments, creditColor) %}
		{% set classList = ['quote-credit'] %}
		{% if creditColor|length %}
			{% set classList = classList|merge(['text-' ~ creditColor]) %}
		{% endif %}
		{% for adjSet in adjustments %}
			{# Get Device Size for Adjustments #}
			{% set devSize = adjSet.deviceSize %}
			{% if devSize|length %}
				{% set devSize = devSize ~ ':' %}	
			{% endif %}
			{# Get adjustments for type at each device size #}
			{% if adjSet.creditFont|length %}
				{% set classList = classList|merge([devSize ~ 'font-' ~ adjSet.creditFont]) %}
			{% endif %}
			{% if adjSet.creditFontSize|length %}
				{% set classList = classList|merge([devSize ~ adjSet.creditFontSize]) %}
			{% endif %}
			{% if adjSet.creditLineHeight|length %}
				{% set classList = classList|merge([devSize ~ adjSet.creditLineHeight]) %}
			{% endif %}
			{% if adjSet.creditItalic|length %}
				{% set classList = classList|merge([devSize ~ adjSet.creditLineHeight]) %}
			{% endif %}
			{% if adjSet.creditTextCase|length %}
				{% set classList = classList|merge([devSize ~ adjSet.creditTextCase]) %}
			{% endif %}
			{% if adjSet.creditLetterSpacing|length %}
				{% set classList = classList|merge([devSize ~ adjSet.creditLetterSpacing]) %}
			{% endif %}		
		{% endfor %}
		{{ classList|join(' ') }}	
	{% endmacro creditClasses %}
	
	{# Set block id attribute value #}
	{% if entry.customId is defined and entry.customId != '' %}
		{% set blockId = entry.customId|replace({' ': '-'})|trim %}
	{% else %}
		{% set blockId = 'header-' ~ entry.id %}
	{% endif %}
	
	{# Set block type handle as class name for styling #}
	{% set blockClass = entry.type.handle|kebab %}
	
	{# animation classes #}
	{% set animClass = '' %}
	{% if _globals.get('animSetting') and 'section' in entry.owner.type.handle %}
		{% set animClass = _globals.get('animSetting') %}
	{% endif %}
	
	{# Set color class #}
	{% set colorScheme = _globals.get('colorScheme') %}
	{% if entry.quoteColor|length %}
		{% set colorClass = 'text-' ~ entry.quoteColor %}
	{% else %}
		{% set colorClass = colorScheme %}
	{% endif %}
	
	{% if entry.creditColor|length %}
		{% set creditColorClass = entry.creditColor %}
	{% else %}
		{% set creditColorClass = colorScheme %}
	{% endif %}
	
	
	{# Retrieve styling adjustments #}
	{% set adjustments = entry.quoteStyleAdjustments.eagerly().all() %}
	
	<blockquote id="{{blockId}}" class="{{ blockClass }} {{ colorClass }} {{animClass}} {{- gMacros.classesOut(adjustments, 'Display') -}} {{- gMacros.classesOut(adjustments, 'Margins', true) -}} {{- gMacros.classesOut(adjustments, 'Type') -}} {{ entry.customClasses }}" {{- gMacros.attributesOut(entry.customAttributes) -}}>
		{{entry.quoteText}}
		<span id="{{blockId}}-credit" class="{{- _self.creditClasses(adjustments, creditColorClass) -}}">
			{{entry.quoteCredit}}
			{% if entry.quoteCreditTitle|length %}
				<span class="credit-title">{{entry.quoteCreditTitle}}</span>
			{% endif %}
		</span>		
	</blockquote>

{% endif %}